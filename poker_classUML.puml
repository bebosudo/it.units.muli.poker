@startuml

class Card {
- CardRank rank
- CardSuit suit
+ CardRank getRank()
+ CardSuit getSuit()
}

class Hand {
- String original
- ArrayList<Card> cards;
- CardHands score;

+ Card getCards(int i)
+ String getOriginal()

+ CardHands getScore()
+ int compare(Hand h)
+ void setScore()
- void sortByRank()
- void sortBySuit()
- boolean isPair()
- boolean isDouble()
- boolean isSet()
- boolean isStraight()
- boolean isFlush()
- boolean isFull()
- boolean isQuad()
- int compareHigh(Hand h)
- int comparePair(Hand h)
- int compareDouble(Hand h)
- int compareSet(Hand h)
- int compareStraight(Hand h)
- int compareFlush(Hand h)
- int compareFull(Hand h)
- int compareQuad(Hand h)
- int compareStraightFlush(Hand h)
+ void printCards()

}

class Player {

}

class Game {

}

Hand <|-- Player
Card <|-- Hand
CardSuit <|-- Card
CardRank <|-- Card
CardHands <|-- Hand

Player <|-- Game

enum CardSuit {
CLUBS = 1
SPADES = 2
HEARTS = 3
DIAMONDS = 4
}

enum CardRank {
TWO = 2
THREE = 3
FOUR = 4
FIVE = 5
SIX = 6
SEVEN = 7
EIGHT = 8
NINE = 9
TEN = 10
JACK = 11
QUEEN = 12
KING = 13
ACE = 14
- final int value
+ int getValue()
}

enum CardHands {
HIGH_CARD = 1
PAIR = 2
TWO PAIRS = 3
THREE_OF_A_KIND = 4
STRAIGHT = 5
FLUSH = 6
FULL_HOUSE = 7
FOUR_OF_A_KIND = 8
STRAIGHT_FLUSH = 9
- int value
}

@enduml